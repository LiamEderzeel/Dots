#!/usr/bin/env bash

function usage {
  echo "Project Launcher"
  echo ""
  echo "Launch tmux session at your project directory or attach/switch to an existing session"
  echo "Supports fuzzy search power by fzf in multiple project directories"
  echo ""
  echo "Usage: $(basename $0) [-d <arg>...] [--] [DIRECTORY...]" 2>&1
  echo ""
  echo "Options:"
  echo '   -d           add directory for fuzzy search'
  echo '   -h|--help    show usage'
  exit 1
}

optstring=":hd:-:"
while getopts ${optstring} arg; do
  case ${arg} in
    -)
      case "${OPTARG}" in
        help)
            usage
            ;;
        *)
            if [ "$OPTERR" = 1 ] && [ "${optspec:0:1}" != ":" ]; then
                echo "Invalid option --${OPTARG}" >&2
            fi
            ;;
      esac;;
    h)
      usage
      ;;
    d)
      multi+=("$OPTARG")
      ;;
    ?)
      echo "Invalid option: -${OPTARG}."
      exit 2
      ;;
  esac
done
shift $(expr $OPTIND - 1 )


if [[ $# -eq 1 ]]; then
    selected=$1
else
    selected=$(find ${multi[@]} -mindepth 1 -maxdepth 1 -type d | fzf)
fi

if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]]; then

    if tmux has-session -t=$selected_name 2> /dev/null; then
      # attach to session from outside tmux"
      tmux attach-session -t $selected_name
      exit 0
    fi
    # if [[ -z $tmux_running ]]; then
      # new session from outside tmux
      tmux new-session -s $selected_name -c $selected
      exit 0
    # fi
fi

if ! tmux has-session -t=$selected_name 2> /dev/null; then
    # new session inside tmux
    tmux new-session -ds $selected_name -c $selected
fi

# switch session
tmux switch-client -t $selected_name

